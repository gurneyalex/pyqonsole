<?xml version="1.0" encoding="UTF-8"?>
<XMI xmlns:UML="org.omg/standards/UML" verified="false" timestamp="" xmi.version="1.2" >
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://uml.sf.net</XMI.exporter>
   <XMI.exporterVersion>1.2.90</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.model xmi.name="umbrelloqpzrpc" href="/tmp/kde-fmasyrjEk/umbrelloqpzrpc.tmp" />
  <XMI.metamodel xmi.name="UML" href="UML.xml" xmi.version="1.3" />
 </XMI.header>
 <XMI.content>
  <UML:Model>
   <UML:Stereotype visibility="public" xmi.id="31" name="type de donnÃ©e" />
   <UML:Class comment="Mediator between TEWidget and TEScreen.

   This class is responsible to scan the escapes sequences of the terminal
   emulation and to map it to their corresponding semantic complements.
   Thus this module knows mainly about decoding escapes sequences and
   is a stateless device w.r.t. the semantics.

   It is also responsible to refresh the TEWidget by certain rules.

   A note on refreshing

   Although the modifications to the current screen image could immediately
   be propagated via `TEWidget' to the graphical surface, we have chosen
   another way here.

   The reason for doing so is twofold.

   First, experiments show that directly displaying the operation results
   in slowing down the overall performance of emulations. Displaying
   individual characters using X11 creates a lot of overhead.

   Second, by using the following refreshing method, the screen operations
   can be completely separated from the displaying. This greatly simplifies
   the programmer's task of coding and maintaining the screen operations,
   since one need not worry about differential modifications on the
   display affecting the operation of concern.

   We use a refreshing algorithm here that has been adoped from rxvt/kvt.

   By this, refreshing is driven by a timer, which is (re)started whenever
   a new bunch of data to be interpreted by the emulation arives at `onRcvBlock'.
   As soon as no more data arrive for `BULK_TIMEOUT' milliseconds, we trigger
   refresh. This rule suits both bulk display operation as done by curses as
   well as individual characters typed.
   (BULK_TIMEOUT &lt; 1000 / max characters received from keyboard per second).

   Additionally, we trigger refreshing by newlines comming in to make visual
   snapshots of lists as produced by `cat', `ls' and likely programs, thereby
   producing the illusion of a permanent and immediate display operation.

   As a sort of catch-all needed for cases where none of the above
   conditions catch, the screen refresh is also triggered by a count
   of incoming bulks (`bulk_incnt').
" visibility="public" xmi.id="2" isAbstract="true" name="TEmulation" >
    <UML:Operation comment="Slot where to to pipe the ESC-sequences coming from the program" visibility="public" xmi.id="21" type="void" isAbstract="true" name="onRcvChar" >
     <UML:Parameter visibility="public" xmi.id="22" value="" type="int" name="cc" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="59" type="void" name="TEmulation" >
     <UML:Parameter visibility="public" xmi.id="60" value="" type="*TEWidget" name="gui" />
    </UML:Operation>
    <UML:Attribute visibility="protected" xmi.id="53" value="" type="TEWidget" name="gui" />
    <UML:Attribute visibility="protected" xmi.id="28" value="" type="*TEScreen" name="scr" />
    <UML:Attribute visibility="protected" xmi.id="29" value="" type="*TEScreen" name="screen[2]" />
   </UML:Class>
   <UML:Class comment="The image manipulated by the emulation.

    This class implements the operations of the terminal emulation framework.
    It is a complete passive device, driven by the emulation decoder
    (TEmuVT102). By this it forms in fact an ADT, that defines operations
    on a rectangular image.

    It does neither know how to display its image nor about escape sequences.
    It is further independent of the underlying toolkit. By this, one can even
    use this module for an ordinary text surface.

    Since the operations are called by a specific emulation decoder, one may
    collect their different operations here.

    The state manipulated by the operations is mainly kept in `image', though
    it is a little more complex bejond this. See the header file of the class.
" visibility="public" xmi.id="3" name="TEScreen" >
    <UML:Operation visibility="public" xmi.id="25" type="*ca" name="getCookedImage" />
    <UML:Attribute visibility="public" xmi.id="38" value="" type="int" name="line" />
    <UML:Attribute visibility="public" xmi.id="36" value="" type="*ca" name="image" />
    <UML:Attribute visibility="public" xmi.id="40" value="" type="int" name="column" />
   </UML:Class>
   <UML:Class comment="TESession

    Sessions are combinations of TEPty and TEmulation.

    The stuff in here does not belong to the terminal emulation framework,
    but to main.C. It serves it's duty by providing a single reference
    to TEPTy/Emulation pairs. In fact, it is only there to demonstrate one
    of the abilities of the framework - multible sessions.
" visibility="public" xmi.id="4" name="TESession" >
    <UML:Operation visibility="public" xmi.id="33" type="void" name="run" />
    <UML:Attribute visibility="private" xmi.id="48" value="" type="TEmuVt102" name="em" />
    <UML:Attribute visibility="private" xmi.id="45" value="" type="TEWidget" name="te" />
    <UML:Attribute visibility="private" xmi.id="46" value="" type="TEPty" name="sh" />
   </UML:Class>
   <UML:Class comment="Ptys provide a pseudo terminal connection to a program.

    Although closely related to pipes, these pseudo terminal connections have
    some ability, that makes it nessesary to uses them. Most importent, they
    know about changing screen sizes and UNIX job control.

    Within the terminal emulation framework, this class represents the
    host side of the terminal together with the connecting serial line.

    One can create many instances of this class within a program.
    As a side effect of using this class, a signal(2) handler is
    installed on SIGCHLD.

    FIXME

    [NOTE: much of the technical stuff below will be replaced by forkpty.]

    publish the SIGCHLD signal if not related to an instance.

    clearify TEPty::done vs. TEPty::~TEPty semantics.
    check if pty is restartable via run after done.

    Pseudo terminals

    Pseudo terminals are a unique feature of UNIX, and always come in form of
    pairs of devices (/dev/ptyXX and /dev/ttyXX), which are connected to each
    other by the operating system. One may think of them as two serial devices
    linked by a null-modem cable. Being based on devices the number of
    simultanous instances of this class is (globally) limited by the number of
    those device pairs, which is 256.

    Another technic are UNIX 98 PTY's. These are supported also, and prefered
    over the (obsolete) predecessor.

    There's a sinister ioctl(2), signal(2) and job control stuff
    nessesary to make everything work as it should.

    Much of the stuff can be simplified by using openpty from glibc2.
    Compatibility issues with obsolete installations and other unixes
    my prevent this.
" visibility="public" xmi.id="5" name="TEPty" />
   <UML:Class comment="Visible screen contents

   This class is responsible to map the `image' of a terminal emulation to the
   display. All the dependency of the emulation to a specific GUI or toolkit is
   localized here. Further, this widget has no knowledge about being part of an
   emulation, it simply work within the terminal emulation framework by exposing
   size and key events and by being ordered to show a new image.

    - The internal image has the size of the widget (evtl. rounded up)
    - The external image used in setImage can have any size.
    - (internally) the external image is simply copied to the internal
       when a setImage happens. During a resizeEvent no painting is done
       a paintEvent is expected to follow anyway.
" visibility="public" xmi.id="6" name="TEWidget" >
    <UML:Attribute visibility="public" xmi.id="63" value="" type="*TESession" name="currentSession" />
   </UML:Class>
   <UML:Class comment="VT102 Terminal Emulation

   This class puts together the screens, the pty and the widget to a
   complete terminal emulation. Beside combining it's componentes, it
   handles the emulations's protocol.

   This module consists of the following sections:

   - Constructor/Destructor
   - Incoming Bytes Event pipeline
   - Outgoing Bytes
     - Mouse Events
     - Keyboard Events
   - Modes and Charset State
   - Diagnostics

Incoming Bytes Event pipeline

   This section deals with decoding the incoming character stream.
   Decoding means here, that the stream is first seperated into `tokens'
   which are then mapped to a `meaning' provided as operations by the
   `TEScreen' class or by the emulation class itself.

   The pipeline proceeds as follows:

   - Tokenizing the ESC codes (onRcvChar)
   - VT100 code page translation of plain characters (applyCharset)
   - Interpretation of ESC codes (tau)

   The escape codes and their meaning are described in the
   technical reference of this program.

Tokens

   Since the tokens are the central notion if this section, we've put them
   in front. They provide the syntactical elements used to represent the
   terminals operations as byte sequences.

   They are encodes here into a single machine word, so that we can later
   switch over them easily. Depending on the token itself, additional
   argument variables are filled with parameter values.

   The tokens are defined below:

   - CHR        - Printable characters     (32..255 but DEL (=127))
   - CTL        - Control characters       (0..31 but ESC (= 27), DEL)
   - ESC        - Escape codes of the form &lt;ESC>&lt;CHR but `[]()+*#'>
   - ESC_DE     - Escape codes of the form &lt;ESC>&lt;any of `()+*#%'> C
   - CSI_PN     - Escape codes of the form &lt;ESC>'['     {Pn} ';' {Pn} C
   - CSI_PS     - Escape codes of the form &lt;ESC>'['     {Pn} ';' ...  C
   - CSI_PR     - Escape codes of the form &lt;ESC>'[' '?' {Pn} ';' ...  C
   - VT52       - VT52 escape codes
                  - &lt;ESC>&lt;Chr>
                  - &lt;ESC>'Y'{Pc}{Pc}
   - XTE_HA     - Xterm hacks              &lt;ESC>`]' {Pn} `;' {Text} &lt;BEL>
                  note that this is handled differently

   The last two forms allow list of arguments. Since the elements of
   the lists are treated individually the same way, they are passed
   as individual tokens to the interpretation. Further, because the
   meaning of the parameters are names (althought represented as numbers),
   they are includes within the token ('N').
" visibility="public" xmi.id="7" name="TEmuVt102" />
   <UML:Class comment="Character with rendition attributes" visibility="public" xmi.id="24" name="ca" >
    <UML:Attribute comment="character" visibility="public" xmi.id="41" value="" type="int" name="c" />
    <UML:Attribute comment="foreground color" visibility="public" xmi.id="42" value="" type="int" name="f" />
    <UML:Attribute comment="background color" visibility="public" xmi.id="43" value="" type="int" name="b" />
    <UML:Attribute comment="rendition" visibility="public" xmi.id="44" value="" type="int" name="r" />
   </UML:Class>
   <UML:DataType stereotype="31" visibility="public" xmi.id="30" name="*TEScreen" />
   <UML:Class comment="An arbitrary long scroll.

   One can modify the scroll only by adding either cells
   or newlines, but access it randomly.

   The model is that of an arbitrary wide typewriter scroll
   in that the scroll is a serie of lines and each line is
   a serie of cells with no overwriting permitted.

   The implementation provides arbitrary length and numbers
   of cells and line/column indexed read access to the scroll
   at constant costs.

FIXME: some complain about the history buffer comsuming the
       memory of their machines. This problem is critical
       since the history does not behave gracefully in cases
       where the memory is used up completely.

       I put in a workaround that should handle it problem
       now gracefully. I'm not satisfied with the solution.

FIXME: Terminating the history is not properly indicated
       in the menu. We should throw a signal.

FIXME: There is noticable decrease in speed, also. Perhaps,
       there whole feature needs to be revisited therefore.
       Disadvantage of a more elaborated, say block-oriented
       scheme with wrap around would be it's complexity.
" visibility="public" xmi.id="34" name="TEHistory" />
   <UML:DataType stereotype="31" visibility="public" xmi.id="37" name="*ca" />
   <UML:DataType stereotype="31" visibility="public" xmi.id="39" name="int" />
   <UML:Class visibility="public" xmi.id="57" name="QObject" />
   <UML:Class visibility="public" xmi.id="61" name="QFrame" />
   <UML:DataType stereotype="31" visibility="public" xmi.id="64" name="*TESession" />
   <UML:Association visibility="public" xmi.id="8" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="composite" type="2" />
     <UML:AssociationEndRole visibility="public" type="3" multiplicity="2" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="11" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="composite" type="7" />
     <UML:AssociationEndRole visibility="public" type="5" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="12" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="composite" type="7" />
     <UML:AssociationEndRole visibility="public" type="2" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="15" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="composite" type="7" />
     <UML:AssociationEndRole visibility="public" type="6" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="16" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="composite" type="7" />
     <UML:AssociationEndRole visibility="public" type="3" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="17" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="composite" type="4" />
     <UML:AssociationEndRole visibility="public" type="5" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="18" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="composite" type="4" />
     <UML:AssociationEndRole visibility="public" type="2" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="19" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="composite" type="4" />
     <UML:AssociationEndRole visibility="public" type="7" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="35" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="composite" type="3" />
     <UML:AssociationEndRole visibility="public" type="24" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Generalization child="2" visibility="public" xmi.id="49" parent="7" />
   <UML:Association visibility="public" xmi.id="50" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="4" />
     <UML:AssociationEndRole visibility="public" type="6" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Generalization child="7" visibility="public" xmi.id="51" parent="2" />
   <UML:Association visibility="public" xmi.id="52" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="2" />
     <UML:AssociationEndRole visibility="public" type="6" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Generalization child="2" visibility="public" xmi.id="58" parent="57" />
   <UML:Generalization child="6" visibility="public" xmi.id="62" parent="61" />
   <UML:Association visibility="public" xmi.id="65" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="composite" type="6" />
     <UML:AssociationEndRole visibility="public" type="4" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="68" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="composite" type="3" />
     <UML:AssociationEndRole visibility="public" type="34" />
    </UML:Association.connection>
   </UML:Association>
  </UML:Model>
 </XMI.content>
 <XMI.extensions xmi.extender="umbrello" >
  <docsettings viewid="1" documentation="" uniqueid="68" />
  <diagrams>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="1240" snapy="10" showatts="0" xmi.id="1" documentation="" type="402" showops="1" showpackage="0" name="diagramme de classes" localid="30000" showstereotype="0" showscope="1" snapcsgrid="0" font="Helvetica,9,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="864" >
    <widgets>
     <classwidget usesdiagramfillcolour="0" width="226" showattsigs="601" usesdiagramusefillcolour="0" x="377" linecolour="#ff0000" y="112" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="90" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="2" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Helvetica,9,-1,5,75,1,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="163" showattsigs="601" usesdiagramusefillcolour="0" x="798" linecolour="#ff0000" y="105" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="75" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="3" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Helvetica,9,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="110" showattsigs="601" usesdiagramusefillcolour="0" x="80" linecolour="#ff0000" y="350" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="75" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="4" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Helvetica,9,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="46" showattsigs="601" usesdiagramusefillcolour="0" x="399" linecolour="#ff0000" y="432" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="29" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="5" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Helvetica,9,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="179" showattsigs="601" usesdiagramusefillcolour="0" x="918" linecolour="#ff0000" y="362" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="37" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="6" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Helvetica,9,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="77" showattsigs="601" usesdiagramusefillcolour="0" x="452" linecolour="#ff0000" y="300" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="29" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="7" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Helvetica,9,-1,5,75,0,0,0,0,0" />
     <notewidget usesdiagramfillcolour="1" width="89" usesdiagramusefillcolour="1" x="533" linecolour="none" y="457" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" isinstance="0" xmi.id="14" text="Shell connection" font="Helvetica,9,-1,5,50,0,0,0,0,0" />
     <notewidget usesdiagramfillcolour="1" width="133" usesdiagramusefillcolour="1" x="920" linecolour="none" y="465" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" isinstance="0" xmi.id="20" text="MainWidget
Created by main" font="Helvetica,9,-1,5,50,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="52" showattsigs="601" usesdiagramusefillcolour="0" x="1120" linecolour="#ff0000" y="114" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="82" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="24" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Helvetica,9,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="69" showattsigs="601" usesdiagramusefillcolour="0" x="1013" linecolour="#ff0000" y="116" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="29" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="34" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Helvetica,9,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="58" showattsigs="601" usesdiagramusefillcolour="1" x="460" linecolour="none" y="35" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="22" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="57" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Helvetica,9,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="55" showattsigs="601" usesdiagramusefillcolour="1" x="980" linecolour="none" y="244" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="22" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="61" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Helvetica,9,-1,5,75,0,0,0,0,0" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="3" indexa="1" totalcountb="2" indexb="1" widgetbid="3" widgetaid="2" xmi.id="8" >
      <linepath>
       <startpoint startx="603" starty="142" />
       <endpoint endx="798" endy="142" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="15" usesdiagramusefillcolour="1" x="780" linecolour="none" y="104" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="66" text="2" font="Helvetica,9,-1,5,50,0,0,0,0,0" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="14" widgetaid="5" roleBdoc="" documentation="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="445" starty="446" />
       <endpoint endx="533" endy="482" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="5" indexa="4" totalcountb="2" indexb="1" widgetbid="5" widgetaid="4" xmi.id="17" >
      <linepath>
       <startpoint startx="190" starty="410" />
       <endpoint endx="399" endy="446" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="5" indexa="1" totalcountb="2" indexb="1" widgetbid="7" widgetaid="4" xmi.id="19" >
      <linepath>
       <startpoint startx="190" starty="365" />
       <endpoint endx="452" endy="314" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="20" widgetaid="6" roleBdoc="" documentation="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="1007" starty="399" />
       <endpoint endx="986" endy="465" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="2" indexb="1" widgetbid="24" widgetaid="3" xmi.id="35" >
      <linepath>
       <startpoint startx="961" starty="155" />
       <endpoint endx="1120" endy="155" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="5" indexa="2" totalcountb="4" indexb="2" widgetbid="6" widgetaid="4" xmi.id="50" >
      <linepath>
       <startpoint startx="190" starty="380" />
       <endpoint endx="918" endy="380" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="2" widgetaid="7" xmi.id="51" >
      <linepath>
       <startpoint startx="490" starty="300" />
       <endpoint endx="490" endy="202" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="4" indexb="1" widgetbid="6" widgetaid="2" xmi.id="52" >
      <linepath>
       <startpoint startx="603" starty="172" />
       <endpoint endx="918" endy="371" />
       <point x="720" y="172" />
       <point x="720" y="371" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="57" widgetaid="2" xmi.id="58" >
      <linepath>
       <startpoint startx="490" starty="112" />
       <endpoint endx="489" endy="57" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="61" widgetaid="6" xmi.id="62" >
      <linepath>
       <startpoint startx="1007" starty="362" />
       <endpoint endx="1007" endy="266" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="4" indexa="3" totalcountb="5" indexb="3" widgetbid="4" widgetaid="6" xmi.id="65" >
      <linepath>
       <startpoint startx="918" starty="389" />
       <endpoint endx="190" endy="395" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" totalcountb="2" indexb="1" widgetbid="34" widgetaid="3" xmi.id="68" >
      <linepath>
       <startpoint startx="961" starty="130" />
       <endpoint endx="1013" endy="130" />
      </linepath>
     </assocwidget>
    </associations>
   </diagram>
  </diagrams>
  <listview>
   <listitem open="1" type="800" id="-1" label="Vues" >
    <listitem open="1" type="801" id="-1" label="Vue logique" >
     <listitem open="0" type="807" id="1" label="diagramme de classes" />
     <listitem open="1" type="813" id="61" />
     <listitem open="1" type="813" id="57" />
     <listitem open="1" type="813" id="34" />
     <listitem open="1" type="813" id="5" />
     <listitem open="1" type="813" id="3" >
      <listitem open="0" type="814" id="40" />
      <listitem open="0" type="814" id="36" />
      <listitem open="0" type="814" id="38" />
      <listitem open="0" type="815" id="25" />
     </listitem>
     <listitem open="1" type="813" id="4" >
      <listitem open="0" type="814" id="48" />
      <listitem open="0" type="814" id="46" />
      <listitem open="0" type="814" id="45" />
      <listitem open="0" type="815" id="33" />
     </listitem>
     <listitem open="1" type="813" id="6" >
      <listitem open="0" type="814" id="63" />
     </listitem>
     <listitem open="1" type="813" id="7" />
     <listitem open="1" type="813" id="2" >
      <listitem open="0" type="814" id="53" />
      <listitem open="0" type="814" id="28" />
      <listitem open="0" type="814" id="29" />
      <listitem open="0" type="815" id="59" />
      <listitem open="0" type="815" id="21" />
     </listitem>
     <listitem open="1" type="813" id="24" >
      <listitem open="0" type="814" id="43" />
      <listitem open="0" type="814" id="41" />
      <listitem open="0" type="814" id="42" />
      <listitem open="0" type="814" id="44" />
     </listitem>
     <listitem open="0" type="830" id="-1" label="Types de donnÃ©es" >
      <listitem open="1" type="829" id="30" />
      <listitem open="1" type="829" id="64" />
      <listitem open="1" type="829" id="37" />
      <listitem open="1" type="829" id="39" />
     </listitem>
    </listitem>
    <listitem open="1" type="802" id="-1" label="Vue des cas d'utilisation" />
    <listitem open="1" type="821" id="-1" label="Composants" />
    <listitem open="1" type="827" id="-1" label="DÃ©ploiements" />
   </listitem>
  </listview>
  <codegeneration>
   <codegenerator language="Python" />
  </codegeneration>
 </XMI.extensions>
</XMI>
